---
title: start
layout: layout
---

<style>
    * {
        margin: 0px;
        padding: 0px;

    }
    body {
        background-size: cover;
        background-position: center;
        text-align: center;
    }
    .bg {
        background-color: rgba(255, 255, 255, 0.25);
        border-radius: 10px;
    }
    .message {
        display: block;
    }
    .title {
        margin-top: 3%;
        margin-left: 2%;
        text-shadow: 1px 1px 10px white;
    }
    .title .contrast {
        color: lightblue;
    }
    .greeting {
        text-shadow: 1px 1px 10px white;
    }
    .forecast {
        //margin-top: 5%;
        height: 10%;
        width: 150px;
        display: inline-block;
        vertical-align: top;
        padding: 5px;
    }
    .day-text {
        display: inline-block;
        vertical-align: top;
        width: 60%;
        margin-top: 5%;
    }
    .forecast .icon {
        margin-top: -5%;
        width: 40%;
    }
</style>

<style type="text/css">
    input,
    input:focus {
        border: 0;
        outline: 0;
        -webkit-appearance: none;
    }
    .wrapper {
        position: relative;
        top: 30%;
        padding: 1rem;
    }
    .time {
        font-size: 5rem;
        letter-spacing: 6px;
    }
    .search {
        margin-top: 2rem;
    }
    .search__text,
    .help {
        position: relative;
        box-sizing: border-box;
        width: 100%;
        max-width: 600px;
        margin-right: auto;
        margin-left: auto;
    }
    .search__text {
        padding: 0.75rem;
        background-color: #3F4A56;
        border-radius: 2px;
        color: #fff;
        font-size: 1.1rem;
    }
    .help {
        height: 0;
        margin: 1rem auto 0;
        border-right: dashed 1px #fff;
        transition: height 0.2s linear;
        text-align: left;
        line-height: 1rem;
        column-count: 2;
        -moz-column-count: 2;
        -webkit-column-count: 2;
        overflow: hidden;
    }
</style>

<div class="wrapper">
    <time class="time" id="js-time"></time>
    <form class="search" id="js-search" autocomplete="off">
        <input class="search__text" id="js-search-text" type="text" autofocus>
    </form>
    <pre class="help" id="js-help"></pre>
</div>

<script type="text/javascript">
    ;
    (function() {
        var Clock = {
            el: document.getElementById('js-time'),
            init: function() {
                Clock.setTime();
                setInterval(Clock.setTime, 1000);
            },
            zeros: function(num) {
                return ('0' + num.toString()).slice(-2);
            },
            setTime: function() {
                var date = new Date();
                var hours = Clock.zeros(date.getHours());
                var minutes = Clock.zeros(date.getMinutes());
                var time = hours + ' ' + minutes;
                Clock.el.innerHTML = time;
            }
        };
        var Cmdr = {
            searchForm: document.getElementById('js-search'),
            searchText: document.getElementById('js-search-text'),
            searchHelp: document.getElementById('js-help'),
            init: function(opts) {
                Cmdr.default = opts.default;
                Cmdr.commands = opts.commands;
                Cmdr.searchForm.addEventListener('submit', Cmdr.search, false);
            },
            search: function(e) {
                var q = Cmdr.searchText.value;
                if (q === '?') {
                    Cmdr.commands.forEach(function(command) {
                        Cmdr.searchHelp.innerHTML += command.key + ': ' + command.name + '\n';
                    });
                    Cmdr.searchHelp.style.height = Math.ceil(Cmdr.commands.length / 2) + 'rem';
                    Cmdr.searchText.value = '';
                } else {
                    Cmdr.location = Cmdr.default+encodeURIComponent(q);
                    q = q.split(':');
                    Cmdr.commands.forEach(function(command) {
                        if (q[0] === command.key) {
                            Cmdr.location = command.url;
                            if (q[1] && command.search) {
                                q.shift();
                                var searchText = encodeURIComponent(q.join(':').trim());
                                Cmdr.location = command.url + command.search + searchText;
                            }
                        }
                    });
                    window.location.href = Cmdr.location;
                }
                e.preventDefault();
            }
        };
        Clock.init();
        Cmdr.init({
            default: 'https://www.google.com/search?q=',
            commands: [{
                key: 'a',
                name: 'Amazon',
                url: 'https://www.amazon.com',
                search: '/s/?field-keywords='
            }, {
                key: 'c',
                name: 'Coinbase',
                url: 'https://www.coinbase.com'
            }, {
                key: 'd',
                name: 'Drive',
                url: 'https://drive.google.com',
                search: '/drive/search?q='
            }, {
                key: 'e',
                name: 'ExtraTorrent',
                url: 'https://extratorrent.cc',
                search: '/search/?search='
            }, {
                key: 'f',
                name: 'Facebook',
                url: 'https://www.facebook.com',
                search: '/search/top/?q='
            }, {
                key: 'g',
                name: 'GitHub',
                url: 'https://github.com',
                search: '/search?q='
            }, {
                key: 'h',
                name: 'Hacker News',
                url: 'https://hn.algolia.com',
                search: '/?query='
            }, {
                key: 'i',
                name: 'Inbox',
                url: 'https://inbox.google.com',
                search: '/search/'
            }, {
                key: 'k',
                name: 'Keep',
                url: 'https://keep.google.com',
                search: '/#search/text='
            }, {
                key: 'p',
                name: 'Product Hunt',
                url: 'https://www.producthunt.com',
                search: '/search?q='
            }, {
                key: 'r',
                name: 'Reddit',
                url: 'https://www.reddit.com',
                search: '/search?q='
            }, {
                key: 's',
                name: 'SoundCloud',
                url: 'https://soundcloud.com',
                search: '/search?q='
            }, {
                key: 't',
                name: 'Twitter',
                url: 'https://twitter.com',
                search: '/search?q='
            }, {
                key: 'y',
                name: 'YouTube',
                url: 'https://www.youtube.com',
                search: '/results?search_query='
            }, ]
        });
    }());
</script>

<div class="0 forecast bg">
</div>
<div class="1 forecast bg">
</div>
<div class="2 forecast bg">
</div>
<div class="3 forecast bg">
</div>
<div class="4 forecast bg">
</div>


<script type="text/javascript">
    $(document).ready(function() {
        var forecast;
        getLocation();
        // get location and pass to show function
        function getLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(getForecast);
                } else {
                    $(".message").innerHTML = "Geolocation is not supported by this browser.";
                }
            }
            // using openweather api
            // get the forecast and show it
        function getForecast(location) {
            $.get("http://api.openweathermap.org/data/2.5/forecast/daily?lat=" + location.coords.latitude + "&lon=" + location.coords.longitude + "&cnt=5&mode=json&units=metric&APPID=8e7cb1288fcfc5a3fd0a12193ff05e0d", function(output) {
                // set applicable css
                for (var i = 0; i < output.list.length; i++) {
                    var d = new Date(output.list[i].dt * 1000);
                    var day = d.getDay();
                    var weekDays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
                    $("." + i).append(
                        "<div class='day-text'>" +
                        "<p>" + weekDays[day] + "</p>" +
                        "<p>" + Math.round(output.list[i].temp.day) + "&deg;C</p>" +
                        "</div>" +
                        "<img class='icon' src='img/icons/" + output.list[i].weather[0].icon + ".svg'>"
                    );
                }
                // displaying location
                $(".location").text(output.city.name);
                console.log("Weather ID", output.list[0].weather[0].icon);
            });
        };
    });
</script>